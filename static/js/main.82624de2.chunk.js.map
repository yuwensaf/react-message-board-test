{"version":3,"sources":["utils.js","WebAPI.js","pages/HomePage/HomePage.js","contexts.js","pages/LoginPage/LoginPage.js","components/Header/Header.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getMe","fetch","method","headers","authorization","then","res","json","Root","styled","div","PostContainer","PostTitle","Link","PostTime","Post","post","to","id","title","Date","createdAt","toLocaleString","HomePage","useState","posts","setPosts","useEffect","map","AuthContext","createContext","LoadingContext","ErrorMessage","LoginPage","username","setUsername","password","setPassword","errorMessage","setErrorMessage","history","useHistory","setUser","useContext","onSubmit","e","body","JSON","stringify","login","data","ok","message","response","toString","push","value","onChange","target","type","HeaderContainer","NavbarList","LeftContainer","Brand","Nav","props","$active","Header","location","useLocation","user","isLoadingAPI","pathname","onClick","App","setIsLoadingAPI","Provider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","theme","colors","primary_300","primary_400","primary_500","document","getElementById"],"mappings":"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","file":"static/js/main.82624de2.chunk.js","sourcesContent":["const TOKEN_NAME = \"token\";\n\nexport const setAuthToken = (token) => {\n  localStorage.setItem(TOKEN_NAME, token);\n};\n\nexport const getAuthToken = () => {\n  return localStorage.getItem(TOKEN_NAME);\n};\n","import { getAuthToken } from \"./utils\";\n\nconst BASE_URL = `https://student-json-api.lidemy.me`; // 這邊放 domain name 就好，下面 fetch 的時候再加上我要的參數，也就是 /posts?_sort=createdAt&_order=desc\n\nexport const getPosts = () => {\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then((res) =>\n    res.json()\n  );\n};\n\n// login\nexport const login = (username, password) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\n// 驗證身份\nexport const getMe = () => {\n  const token = getAuthToken(); // 從 localStorage 拿出 token\n  return fetch(`${BASE_URL}/me`, {\n    method: \"GET\",\n    headers: {\n      authorization: `Bearer ${token}`, // 把 token 帶到 server 端\n    },\n  }).then((res) => res.json());\n};\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { getPosts } from \"../../WebAPI\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Root = styled.div`\n  width: 80%;\n  margin: 0 auto;\n`;\n\nconst PostContainer = styled.div`\n  border-bottom: 1px solid rgba(0, 55, 21, 0.5);\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n  padding: 16px;\n`;\n\nconst PostTitle = styled(Link)`\n  font-size: 24px;\n  color: #333;\n  text-decoration: none;\n`;\n\nconst PostTime = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/posts/${post.id}`}>{post.title}</PostTitle>\n      <PostTime>{new Date(post.createdAt).toLocaleString()}</PostTime>\n    </PostContainer>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default function HomePage() {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    getPosts().then((posts) => setPosts(posts));\n  }, []);\n\n  return (\n    <Root>\n      {posts.map((post) => (\n        <Post key={post.id} post={post}></Post>\n      ))}\n    </Root>\n  );\n}\n","import { createContext } from \"react\";\n\nexport const AuthContext = createContext(null);\nexport const LoadingContext = createContext(false);\n","import React, { useState, useContext } from \"react\";\nimport { login, getMe } from \"../../WebAPI\";\nimport styled from \"styled-components\";\nimport { setAuthToken } from \"../../utils\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../contexts\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nexport default function LoginPage() {\n  const [username, setUsername] = useState(\"\"); // 初始值是空字串\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const history = useHistory(); // 使用 useHistory()\n  const { setUser } = useContext(AuthContext); // 使用 AuthContext 傳進來的 setUser\n\n  // 表單送出時\n  const handleSubmit = (e) => {\n    setErrorMessage(null); // 每次按登入時，錯誤訊息會先移除\n    login(username, password).then((data) => {\n      if (data.ok === 0) {\n        // 如果沒拿到 token（username 或 password 錯誤）\n        return setErrorMessage(data.message);\n      }\n      // 如果有拿到 token\n      setAuthToken(data.token); // 把 token 存到 LocalStorage 裡面\n\n      // 發送 getMe request 去拿使用者資料\n      getMe().then((response) => {\n        // 如果 getMe 失敗\n        if (response.ok !== 1) {\n          setAuthToken(null); // 就把 token 清空\n          return setErrorMessage(response.toString()); // 顯示錯誤訊息\n        }\n        // 如果 getMe 成功\n        setUser(response.data); // 把使用者資料存進 user 這個 state 裡面\n\n        history.push(\"/\"); // 把使用者導回首頁\n      });\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        username:\n        <input value={username} onChange={(e) => setUsername(e.target.value)} />\n      </div>\n      <div>\n        password:\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </div>\n      <input type=\"submit\" value=\"登入\" />\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </form>\n  );\n}\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { AuthContext, LoadingContext } from \"../../contexts\";\nimport { setAuthToken } from \"../../utils\";\n\nconst HeaderContainer = styled.div`\n  height: 64px;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 0 24px;\n  box-sizing: border-box;\n`;\n\nconst NavbarList = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 64px;\n  box-sizing: border-box;\n`;\n\nconst LeftContainer = styled.div`\n  display: flex;\n  align-items: center;\n  ${NavbarList} {\n    margin-left: 64px;\n  }\n`;\n\nconst Brand = styled.div`\n  font-size: 32px;\n  font-weight: bold;\n`;\n\nconst Nav = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  width: 100px;\n  cursor: pointer;\n  color: black;\n  text-decoration: none;\n  // 如果 $active 是 true，才會有 background-color\n  ${(props) =>\n    props.$active &&\n    `\n    background-color: rgba(202, 68, 111, 0.1);\n  `}\n`;\n\nexport default function Header() {\n  const location = useLocation();\n  const { user, setUser } = useContext(AuthContext);\n  const history = useHistory();\n  const isLoadingAPI = useContext(LoadingContext); // getMe 的 API 是否拿到結果了\n\n  // 登出後\n  const handleLogout = () => {\n    setAuthToken(\"\"); // 把 token 清空\n    setUser(null); // 把 user 的 state 清空\n    if (location.pathname !== \"/\") {\n      history.push(\"/\"); // 如果不在首頁，才會導回首頁\n    }\n  };\n\n  return (\n    <HeaderContainer>\n      <LeftContainer>\n        <Brand>我的第一個部落格</Brand>\n        <NavbarList>\n          <Nav to=\"/\" $active={location.pathname === \"/\"}>\n            首頁\n          </Nav>\n          {!isLoadingAPI && user && (\n            <Nav to=\"/new-post\" $active={location.pathname === \"/new-post\"}>\n              發布文章\n            </Nav>\n          )}\n        </NavbarList>\n      </LeftContainer>\n      <NavbarList>\n        {!isLoadingAPI && !user && (\n          <Nav to=\"/login\" $active={location.pathname === \"/login\"}>\n            登入\n          </Nav>\n        )}\n        {!isLoadingAPI && user && <Nav onClick={handleLogout}>登出</Nav>}\n      </NavbarList>\n    </HeaderContainer>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport HomePage from \"../../pages/HomePage\";\nimport LoginPage from \"../../pages/LoginPage\";\nimport Header from \"../Header\";\nimport { AuthContext, LoadingContext } from \"../../contexts\";\nimport { getMe } from \"../../WebAPI\";\nimport { getAuthToken } from \"../../utils\";\n\nconst Root = styled.div`\n  padding-top: 64px;\n`;\n\nfunction App() {\n  const [user, setUser] = useState(null); // 使用者資料的 state\n  const [isLoadingAPI, setIsLoadingAPI] = useState(false); // getMe 的 API 是否拿到結果了\n\n  // call API 去 server 拿使用者資料，再把使用者資料存到 user 的 state 裡面去\n  useEffect(() => {\n    const token = getAuthToken(); // 從 LocalStorage 拿出 token\n    if (token) {\n      setIsLoadingAPI(true);\n      // 有 token 才 call API\n      getMe().then((response) => {\n        setIsLoadingAPI(false);\n        if (response.ok === 1) {\n          setUser(response.data);\n        }\n      });\n    }\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <Root>\n        <Router>\n          <LoadingContext.Provider value={isLoadingAPI}>\n            <Header />\n          </LoadingContext.Provider>\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Route exact path=\"/login\">\n              <LoginPage />\n            </Route>\n          </Switch>\n        </Router>\n      </Root>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ThemeProvider } from \"styled-components\";\n\nconst theme = {\n  colors: {\n    primary_300: \"#ef9898\",\n    primary_400: \"#ec6b6b\",\n    primary_500: \"#ea1212\",\n  },\n};\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}