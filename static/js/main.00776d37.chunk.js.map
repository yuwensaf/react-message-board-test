{"version":3,"sources":["components/App/App.js","reportWebVitals.js","index.js"],"names":["Page","styled","div","Title","h1","MessageForm","form","MessageTextArea","textarea","SubmitButton","button","MessageList","MessageContainer","MessageHead","MessageTitle","MessageTime","MessageBody","ErrorMessage","Loading","Message","author","time","children","App","useState","messages","setMessages","messageApiError","setmessageApiError","value","setValue","postMessageError","setPostMessageError","isLoadingPostMessage","setisLoadingPostMessage","fetchMessages","fetch","then","res","json","data","catch","err","message","useEffect","onSubmit","e","preventDefault","method","headers","body","JSON","stringify","nickname","ok","rows","onChange","target","onFocus","toString","length","map","Date","createdAt","toLocaleString","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","theme","colors","primary_300","primary_400","primary_500","document","getElementById"],"mappings":"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","file":"static/js/main.00776d37.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst API_ENDPOINT =\n  \"https://student-json-api.lidemy.me/comments?_sort=createdAt&_order=desc\";\n\nconst Page = styled.div`\n  width: 360px;\n  margin: 0 auto;\n`;\n\nconst Title = styled.h1`\n  color: salmon;\n  margin-bottom: 10px;\n`;\n\nconst MessageForm = styled.form`\n  margin-bottom: 10px;\n`;\n\nconst MessageTextArea = styled.textarea`\n  width: 100%;\n  display: block;\n  margin-bottom: 8px;\n`;\n\nconst SubmitButton = styled.button``;\n\nconst MessageList = styled.div``;\n\nconst MessageContainer = styled.div`\n  border: 1px solid black;\n  padding: 8px 16px;\n  border-radius: 8px;\n  margin-bottom: 8px;\n`;\n\nconst MessageHead = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 16px;\n  padding-bottom: 4px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.3);\n`;\n\nconst MessageTitle = styled.div`\n  color: rgba(10, 20, 30, 0.7);\n  font-size: 14px;\n`;\n\nconst MessageTime = styled.div``;\n\nconst MessageBody = styled.div`\n  font-size: 16px;\n`;\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\n// 正在發送 request 的 Loading component\nconst Loading = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.6);\n  color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 30px;\n`;\n\nfunction Message({ author, time, children }) {\n  return (\n    <MessageContainer>\n      <MessageHead>\n        <MessageTitle>{author}</MessageTitle>\n        <MessageTime>{time}</MessageTime>\n      </MessageHead>\n      <MessageBody>{children}</MessageBody>\n    </MessageContainer>\n  );\n}\n\nMessage.propTypes = {\n  author: PropTypes.string,\n  time: PropTypes.string,\n  children: PropTypes.node,\n};\n\nfunction App() {\n  const [messages, setMessages] = useState(null);\n  const [messageApiError, setmessageApiError] = useState(null); // GET message（顯示留言）的錯誤訊息\n  const [value, setValue] = useState(); // textarea 的 value\n  const [postMessageError, setPostMessageError] = useState(); // POST message（送出留言）的錯誤訊息\n  const [isLoadingPostMessage, setisLoadingPostMessage] = useState(false); // 是否正在送出留言（是否正在發送 request）\n\n  // 用 fetch 發送 GET request 去 API 拿資料\n  const fetchMessages = () => {\n    return fetch(API_ENDPOINT)\n      .then((res) => res.json())\n      .then((data) => {\n        setMessages(data);\n      })\n      .catch((err) => setmessageApiError(err.message));\n  };\n\n  const handleTextareaChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  // 當使用者 focus 在 textarea 時（準備開始打字），錯誤訊息要消失掉\n  const handleTextareaFocus = () => {\n    setPostMessageError(null); // 把 postMessageError 設為 false\n  };\n\n  // 表單送出的事件\n  const handleFormSubmit = (e) => {\n    e.preventDefault(); // 先阻止預設的表單送出行為\n\n    // isLoadingPostMessage 是 true 代表：上一個留言還正在發送\n    if (isLoadingPostMessage) {\n      return; // 如果上一個留言還正在發送，就 return\n    }\n\n    setisLoadingPostMessage(true); // 在發送 API 之前，要把 isLoadingPostMessage 設為 true\n    fetch(\"https://student-json-api.lidemy.me/comments\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        nickname: \"harry\",\n        body: value,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setisLoadingPostMessage(false); // 在 API 的結果回來之後，要把 isLoadingPostMessage 設為 false\n        if (data.ok === 0) {\n          // 如果送出留言失敗（沒有輸入留言內容）\n          setPostMessageError(data.message);\n        }\n        // 如果有成功送出留言，就再發一次 GET request 去 API 拿最新的資料\n        setValue(\"\"); // 把 textarea 清空\n        fetchMessages();\n      })\n      .catch((err) => {\n        setisLoadingPostMessage(false); // 在 API 的結果（錯誤訊息）回來之後，要把 isLoadingPostMessage 設為 false\n        setPostMessageError(err.message);\n      });\n  };\n\n  // 用 fetch 發送 GET request 去 API 拿資料\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n\n  return (\n    <Page>\n      {isLoadingPostMessage && <Loading>Loading...</Loading>}\n      <Title>留言板</Title>\n      <MessageForm onSubmit={handleFormSubmit}>\n        <MessageTextArea\n          rows={10}\n          value={value}\n          onChange={handleTextareaChange}\n          onFocus={handleTextareaFocus}\n        />\n        <SubmitButton>送出留言</SubmitButton>\n        {postMessageError && <ErrorMessage>{postMessageError}</ErrorMessage>}\n      </MessageForm>\n      {messageApiError && ( // 這裡要加上小括號，才能換行\n        <ErrorMessage>\n          Something went wrong. {messageApiError.toString()}\n        </ErrorMessage>\n      )}\n\n      {messages && messages.length === 0 && <div>No message!</div>}\n      <MessageList>\n        {messages &&\n          messages.map((message) => (\n            <Message\n              key={message.id}\n              author={message.nickname}\n              time={new Date(message.createdAt).toLocaleString()}\n            >\n              {message.body}\n            </Message>\n          ))}\n      </MessageList>\n    </Page>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ThemeProvider } from \"styled-components\";\n\nconst theme = {\n  colors: {\n    primary_300: \"#ef9898\",\n    primary_400: \"#ec6b6b\",\n    primary_500: \"#ea1212\",\n  },\n};\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}